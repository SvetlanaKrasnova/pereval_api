name: CI/CD Pipeline

on:
  push:
    branches:
      - 'main'

jobs:
  run_tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with ruff
        run: |
          ruff format src/
          ruff check src/
          ruff format test_db_pereval.py
          ruff check test_db_pereval.py
          ruff format data_for_tests.py
          ruff check data_for_tests.py
      - name: Run tests
        env:
          FSTR_DB_HOST: ${{ secrets.FSTR_DB_HOST }}
          FSTR_DB_PORT: ${{ secrets.FSTR_DB_PORT }}
          FSTR_DB_NAME: ${{ secrets.FSTR_DB_NAME }}
          FSTR_DB_LOGIN: ${{ secrets.FSTR_DB_LOGIN }}
          FSTR_DB_PASS: ${{ secrets.FSTR_DB_PASS }}
        run: |
          pytest
  build_image_to_yc:
    needs: run_tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login Yandex Cloud
        uses: yc-actions/yc-cr-login@v2
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Build and push image to Yandex Cloud Container Registry
        run: |
          docker build \
          -t cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/${{ secrets.YANDEX_REPO_NAME }}:${{ github.sha }} \
          --build-arg FSTR_DB_HOST=${{ secrets.FSTR_DB_HOST }} \
          --build-arg FSTR_DB_PORT=${{ secrets.FSTR_DB_PORT }} \
          --build-arg FSTR_DB_NAME=${{ secrets.FSTR_DB_NAME }} \
          --build-arg FSTR_DB_PASS=${{ secrets.FSTR_DB_PASS }} \
          --build-arg FSTR_DB_LOGIN=${{ secrets.FSTR_DB_LOGIN }} \
          --no-cache .
          docker push cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/${{ secrets.YANDEX_REPO_NAME }}:${{ github.sha }}

  deploy_image_to_yc:
    needs: build_image_to_yc
    runs-on: ubuntu-latest
    steps:
      - name: Connect to VM on SSH and Rum commands to VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.YANDEX_SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.YANDEX_SSH_PASSPHRASE }}
          port: ${{ secrets.VM_PORT }}
          script: |
            sudo docker login --username oauth --password ${{ secrets.OAUTH_DOCKER_PASS }} cr.yandex
            sudo docker pull cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/${{ secrets.YANDEX_REPO_NAME }}:${{ github.sha }}
            sudo docker rm -f pereval
            sudo docker run -d -p 8080:8080 --name pereval cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/${{ secrets.YANDEX_REPO_NAME }}:${{ github.sha }}